{
	"info": {
		"_postman_id": "d1ee443f-ee2b-4b7e-8155-3870e79a8347",
		"name": "rest_hateoas",
		"description": "```\nSample requests for rest_hateoas application\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37161851"
	},
	"item": [
		{
			"name": "index",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/index",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"index"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "greeting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/greeting?name=World",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"greeting"
					],
					"query": [
						{
							"key": "name",
							"value": "World"
						}
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - find",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/persons/homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons",
						"homer"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - find - expired token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJyb2xlcyI6W10sInN1YiI6ImJvc3MiLCJpYXQiOjE3MjQyODM2NTQsImV4cCI6MTcyNDI4NzI1NH0.j0jm5_jBxu8jtF6FKZXs4yM3EHBeS40NS02fYlT_6-mdkq21w7PFp6Um00v8Nh6mBcY0HJivMeCcHeu82gUHkw",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/persons/homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons",
						"homer"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/persons",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons search with pageable params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/persons?size=2&page=2&sort=name.lastName,asc&sort=name.firstName,desc&=",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons"
					],
					"query": [
						{
							"key": "size",
							"value": "2"
						},
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "sort",
							"value": "name.lastName,asc"
						},
						{
							"key": "sort",
							"value": "name.firstName,desc"
						},
						{
							"key": "",
							"value": ""
						}
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons search with filter params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/1/persons?filter=homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons"
					],
					"query": [
						{
							"key": "filter",
							"value": "homer"
						}
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"dateOfBirth\": \"1980-01-01\",\n    \"name\": {\n      \"firstName\": \"Homer\",\n      \"lastName\": \"Simpson\",\n      \"otherNames\": \"Jay\"\n    },\n    \"address\": {\n      \"line1\": \"Level 33\",\n      \"line2\": \"10000 York St\",\n      \"city\": \"Sydney\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2000\",\n      \"country\": \"Australia\"\n    }\n  }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/persons",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "login (boss)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"token\", jsonData.token);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"username\": \"boss\",\n    \"password\": \"password\"\n  }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/auth/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"auth",
						"login"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "login (bob)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.globals.set(\"token\", jsonData.token);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"username\": \"bob\",\n    \"password\": \"password\"\n  }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/auth/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"auth",
						"login"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - create - invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"dateOfBirth\": \"1980-01-01\",\n    \"name\": {\n      \"firstName\": \"\",\n      \"lastName\": \"Simpson\",\n      \"otherNames\": \"Jay\"\n    },\n    \"address\": {\n      \"line1\": \"Level 33\",\n      \"line2\": \"10000 York St\",\n      \"city\": \"Sydney\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2000\",\n      \"country\": \"Australia\"\n    }\n  }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/persons",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "            {\n                \"key\": \"homer\",\n                \"version\": 0,\n                \"name\": {\n                    \"firstName\": \"Homer2\",\n                    \"lastName\": \"Simpson\",\n                    \"otherNames\": \"Jay\"\n                },\n                \"address\": {\n                    \"line1\": \"Level 33\",\n                    \"line2\": \"10000 York St\",\n                    \"city\": \"Sydney\",\n                    \"state\": \"NSW\",\n                    \"country\": \"Australia\",\n                    \"postcode\": \"2000\"\n                },\n                \"dateOfBirth\": \"1980-01-01\"\n            }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/persons/homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons",
						"homer"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - update - invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "            {\n                \"key\": \"homer\",\n                \"version\": 1,\n                \"name\": {\n                    \"firstName\": \"Homer2\",\n                    \"lastName\": \"\",\n                    \"otherNames\": \"Jay\"\n                },\n                \"address\": {\n                    \"line1\": \"Level 33\",\n                    \"line2\": \"10000 York St\",\n                    \"city\": \"Sydney\",\n                    \"state\": \"NSW\",\n                    \"country\": \"Australia\",\n                    \"postcode\": \"2000\"\n                },\n                \"dateOfBirth\": \"1980-01-01\"\n            }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/persons/homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons",
						"homer"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		},
		{
			"name": "persons - update - conflict",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "            {\n                \"key\": \"homer\",\n                \"version\": -1,\n                \"name\": {\n                    \"firstName\": \"Homer2\",\n                    \"lastName\": \"\",\n                    \"otherNames\": \"Jay\"\n                },\n                \"address\": {\n                    \"line1\": \"Level 33\",\n                    \"line2\": \"10000 York St\",\n                    \"city\": \"Sydney\",\n                    \"state\": \"NSW\",\n                    \"country\": \"Australia\",\n                    \"postcode\": \"2000\"\n                },\n                \"dateOfBirth\": \"1980-01-01\"\n            }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/1/persons/homer",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"1",
						"persons",
						"homer"
					]
				},
				"description": "Call the greeting endpoint"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}