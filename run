#!/usr/bin/env bash

case "$1" in

  'build')
    echo ""
    echo "Building"
    echo ""
    ./gradlew build
    ;;

  'clean')
    echo ""
    echo "Cleaning"
    echo ""
    ./gradlew clean
    ;;

  'run')
    echo ""
    echo "Running application"
    echo ""
    ./gradlew app:run
    ;;

  'test')
    echo ""
    echo "Running tests"
    echo ""
    ./gradlew clean test
    ;;

  'doc')
    echo ""
    echo "Generating docs"
    echo ""
    ./gradlew dokkaHtml
    open build/dokka/html/index.html
    ;;


  'gradle:upgrade')
    echo ""
    echo "Upgrading gradle."
    echo ""
    if [ -z "$2" ]; then
      echo "Version not specified!"
    else
      ./gradlew wrapper --gradle-version $2 --distribution-type=all
    fi
    echo ""
    ;;

  'report:test:open')
    echo ""
    echo "Opening Junit test report."
    echo ""
    open ./build/reports/tests/test/index.html
    echo ""
    ;;

  'h2')
    echo ""
    echo "Opening H2 console."
    echo ""
    open http://localhost:8080/h2-console/
    echo ""
    ;;

 'docs:html')
    echo ""
    echo "Generating asciidoc HTML"
    echo ""
    ./gradlew clean asciidoc
    echo "See output in build/docs/asciidoc/"
    echo ""
    ;;

  'docs:pdf')
    echo ""
    echo "Generating asciidoc PDF"
    echo ""
    ./gradlew clean asciidocPdf
    echo "See output in build/docs/asciidocPdf/"
    echo ""
    ;;

  'docs:all')
    echo ""
    echo "Generating all asciidoc"
    echo ""
    ./gradlew clean generateDocs
    echo "See output in build/docs/asciidocPdf/"
    echo ""
    ;;

  'swagger')
    echo ""
    echo "Opening api docs"
    echo ""
    open http://localhost:8080/swagger-ui/index.html
    echo ""
    ;;

  *)
    echo -e ""
    echo "Usage:"
    echo ""
    echo "$(tput setaf 5)    $me$(tput sgr0) $(tput setaf 3)<command>$(tput sgr0)"
    echo ""
    echo "Commands:"
    echo ""

    echo "$(tput setaf 3)    build                                      $(tput sgr0)      Build application"
    echo "$(tput setaf 3)    clean                                      $(tput sgr0)      Delete generated and temporary files"
    echo "$(tput setaf 3)    run                                        $(tput sgr0)      Run the application"
    echo "$(tput setaf 3)    test                                       $(tput sgr0)      Run tests"
    echo "$(tput setaf 3)    doc                                        $(tput sgr0)      Generate Dokka documentation and open in browser"
    echo "$(tput setaf 3)    gradle:upgrade <version>                   $(tput sgr0)      Upgrade gradle"
    echo "$(tput setaf 3)    report:test:open                           $(tput sgr0)      Open junit test reports for all modules"
    echo "$(tput setaf 3)    docs:all                                   $(tput sgr0)      Generate asciidoc documentation"
    echo "$(tput setaf 3)    docs:html                                  $(tput sgr0)      Generate asciidoc documentation as HTML only"
    echo "$(tput setaf 3)    docs:pdf                                   $(tput sgr0)      Generate asciidoc documentation as PDF only"

esac
